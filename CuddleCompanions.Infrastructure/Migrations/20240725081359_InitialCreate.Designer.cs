// <auto-generated />
using System;
using CuddleCompanions.Infrastructure.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CuddleCompanions.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240725081359_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CuddleCompanions.Domain.Entities.Adopter", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Adopter");
                });

            modelBuilder.Entity("CuddleCompanions.Domain.Entities.AdoptionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdopterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AdoptionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.ToTable("AdoptionRecord");
                });

            modelBuilder.Entity("CuddleCompanions.Domain.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateArrived")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PetStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("CuddleCompanions.Domain.Entities.Adopter", b =>
                {
                    b.OwnsOne("CuddleCompanions.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("AdopterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AdopterId");

                            b1.ToTable("Adopter");

                            b1.WithOwner()
                                .HasForeignKey("AdopterId");
                        });

                    b.OwnsOne("CuddleCompanions.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("AdopterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AdopterId");

                            b1.ToTable("Adopter");

                            b1.WithOwner()
                                .HasForeignKey("AdopterId");
                        });

                    b.OwnsOne("CuddleCompanions.Domain.ValueObjects.Phone", "Phone", b1 =>
                        {
                            b1.Property<Guid>("AdopterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AdopterId");

                            b1.ToTable("Adopter");

                            b1.WithOwner()
                                .HasForeignKey("AdopterId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Phone")
                        .IsRequired();
                });

            modelBuilder.Entity("CuddleCompanions.Domain.Entities.AdoptionRecord", b =>
                {
                    b.HasOne("CuddleCompanions.Domain.Entities.Adopter", null)
                        .WithMany("AdoptionRecords")
                        .HasForeignKey("AdopterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CuddleCompanions.Domain.Entities.Pet", b =>
                {
                    b.OwnsOne("CuddleCompanions.Domain.ValueObjects.PetAge", "Age", b1 =>
                        {
                            b1.Property<Guid>("PetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Months")
                                .HasColumnType("int");

                            b1.Property<int>("Years")
                                .HasColumnType("int");

                            b1.HasKey("PetId");

                            b1.ToTable("Pet");

                            b1.WithOwner()
                                .HasForeignKey("PetId");
                        });

                    b.Navigation("Age")
                        .IsRequired();
                });

            modelBuilder.Entity("CuddleCompanions.Domain.Entities.Adopter", b =>
                {
                    b.Navigation("AdoptionRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
